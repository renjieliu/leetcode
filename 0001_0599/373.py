import itertools
def kSmallestPairs(nums1: 'List[int]', nums2: 'List[int]', k: int) :
    output = []
    for i in sorted(itertools.product(nums1, nums2), key=sum)[:k]:
        output.append(list(i))
    return output


    # if len(nums1) * len(nums2) * k ==0 :
    #     return []
    #
    # map ={}
    # arr = []
    # for i in range(len(nums1)):
    #     for j in range(len(nums2)):
    #         map[str(i) +'|'+ str(nums1[i]) + '|' + str(j) +'|' + str(nums2[j])] = nums1[i] + nums2[j]
    #         arr.append(nums1[i] + nums2[j])
    #
    # arr.sort()
    # arr = arr[:k]
    # output = []
    #
    # for i in arr:
    #     for key,v in map.items():
    #         if v == i:
    #             output.append([int(key.split("|")[1]) , int(key.split("|")[3]) ])
    #             map[key] = ''
    #         if len(output) >=k:
    #             return output
    # return output
    #


print(kSmallestPairs(nums1 = [1,7,11], nums2 = [2,4,6], k = 3))
print(kSmallestPairs([1,1,2], [1,2,3],2))
print(kSmallestPairs([1,2], [3],3))
print(kSmallestPairs([1,1,2],[1,2,3],10))
print(kSmallestPairs([1,2,4],[-1,1,2],100))
print(kSmallestPairs([-10,-4,0,0,6],[3,5,6,7,8,100],10))
print(kSmallestPairs([-999,-999,-996,-993,-991,-982,-981,-972,-972,-969,-965,-964,-960,-960,-959,-955,-954,-952,-949,-945,-941,-939,-933,-933,-926,-924,-923,-921,-903,-893,-885,-881,-877,-870,-863,-863,-858,-856,-849,-848,-825,-824,-822,-822,-821,-820,-815,-804,-804,-801,-801,-800,-796,-795,-793,-787,-781,-775,-772,-770,-764,-759,-756,-754,-753,-749,-739,-735,-734,-728,-719,-718,-706,-704,-704,-698,-692,-687,-674,-671,-667,-653,-651,-650,-648,-641,-638,-637,-634,-623,-623,-620,-619,-618,-618,-617,-615,-607,-604,-602,-601,-601,-600,-599,-588,-586,-583,-582,-566,-564,-557,-553,-550,-550,-547,-545,-541,-536,-535,-533,-527,-516,-515,-513,-512,-499,-496,-491,-491,-488,-486,-485,-482,-481,-475,-471,-461,-453,-450,-445,-442,-441,-441,-435,-433,-428,-426,-424,-424,-413,-409,-407,-385,-381,-375,-372,-370,-364,-361,-355,-347,-342,-341,-340,-338,-334,-331,-328,-309,-306,-304,-294,-291,-288,-288,-287,-272,-271,-268,-268,-260,-258,-256,-250,-250,-249,-245,-244,-238,-233,-227,-225,-222,-217,-217,-210,-209,-208,-207,-206,-206,-202,-200,-197,-195,-190,-185,-185,-185,-182,-170,-170,-168,-159,-158,-157,-156,-152,-150,-150,-143,-136,-135,-132,-132,-132,-126,-124,-122,-112,-107,-106,-103,-103,-100,-86,-85,-82,-81,-79,-79,-76,-54,-44,-44,-35,-32,-27,-23,-22,-11,0,0,3,9,12,20,20,32,40,45,46,61,64,66,70,71,75,89,96,98,99,101,103,115,117,140,143,144,145,148,150,161,163,179,192,194,204,211,218,221,229,230,241,246,258,260,263,264,269,270,274,274,279,282,283,283,285,285,286,293,294,298,301,302,304,304,314,316,322,327,330,331,336,336,343,348,348,355,356,357,358,362,362,363,371,374,382,386,392,395,395,395,395,409,414,417,429,433,433,436,436,439,440,447,450,451,453,457,467,470,475,477,479,480,480,487,487,490,491,504,506,507,521,532,538,547,547,554,574,575,576,578,578,583,597,601,601,601,605,606,608,613,616,618,620,620,623,626,627,627,630,630,633,638,640,643,646,646,648,653,664,670,671,674,675,677,680,689,691,692,693,696,702,703,712,712,713,721,723,723,725,735,742,747,748,753,755,761,762,766,772,775,781,782,784,788,799,800,802,814,821,821,833,841,842,846,848,857,858,863,863,864,865,868,869,871,878,884,888,892,893,894,902,911,913,919,920,922,928,928,928,935,940,942,943,944,952,954,955,957,959,965,967,980,987,996,998,999,999]
,[-1000,-997,-997,-984,-982,-970,-969,-964,-960,-958,-954,-953,-946,-945,-943,-939,-933,-930,-928,-927,-926,-923,-922,-909,-906,-905,-899,-895,-893,-892,-885,-882,-880,-868,-866,-858,-852,-850,-846,-842,-841,-841,-834,-831,-830,-830,-824,-820,-816,-814,-814,-814,-809,-807,-801,-801,-792,-791,-790,-786,-785,-783,-783,-782,-781,-779,-772,-768,-765,-765,-753,-751,-750,-749,-748,-747,-745,-743,-742,-739,-735,-726,-725,-722,-714,-706,-699,-698,-698,-697,-693,-693,-686,-679,-678,-660,-660,-654,-647,-645,-631,-616,-615,-605,-604,-604,-594,-593,-591,-583,-579,-576,-569,-565,-563,-557,-556,-555,-555,-541,-535,-529,-525,-522,-521,-519,-515,-501,-494,-486,-476,-474,-468,-467,-459,-458,-456,-450,-449,-446,-441,-437,-436,-431,-431,-427,-423,-420,-419,-413,-409,-406,-405,-403,-395,-379,-377,-375,-367,-359,-355,-347,-341,-337,-333,-325,-318,-316,-315,-310,-309,-305,-301,-297,-295,-294,-292,-290,-284,-278,-277,-277,-274,-273,-271,-271,-267,-261,-259,-259,-254,-251,-247,-245,-239,-238,-237,-227,-226,-223,-222,-218,-217,-216,-214,-213,-212,-211,-209,-206,-200,-194,-191,-190,-186,-172,-158,-157,-154,-153,-149,-147,-144,-142,-140,-138,-136,-109,-106,-106,-102,-93,-86,-85,-82,-78,-74,-71,-65,-58,-57,-53,-52,-48,-45,-40,-32,-30,-27,-24,-13,-9,-9,-5,-4,13,17,20,25,40,42,44,46,48,56,63,67,77,82,86,89,90,90,93,100,100,102,103,103,105,108,109,110,115,115,116,117,121,132,135,136,140,141,145,155,170,177,183,188,191,196,197,198,199,206,207,209,210,212,212,215,221,224,224,237,239,258,262,265,268,271,276,278,282,282,286,288,293,302,306,307,313,315,316,316,316,329,335,336,336,337,342,343,347,351,356,357,361,361,363,364,365,370,375,375,379,383,390,391,395,395,396,404,405,415,417,417,425,431,431,433,454,455,457,458,460,466,468,470,476,480,483,487,488,497,513,515,518,530,535,535,539,540,546,546,547,563,564,567,578,587,590,591,591,594,595,597,602,605,606,614,619,623,625,626,638,638,646,651,656,664,666,667,669,671,674,680,681,681,691,692,701,703,704,708,721,731,733,741,744,764,775,780,783,789,789,790,790,792,794,795,795,798,806,807,809,819,822,824,824,835,836,840,840,843,850,851,852,854,860,868,870,886,886,888,890,895,917,923,924,932,936,937,939,949,954,954,954,955,955,958,962,964,971,984,984,986,994,996,996]
,1000))






