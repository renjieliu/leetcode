def numSubarraysWithSum(A: 'List[int]', S: int):
    if len(A) == 0:
        return 0
    else:
        lkp = []
        dict = []
        one_pos = 0
        output_0 = 0
        cnt_0 = 0
        sx = 0
        for i in range(len(A)):
            sx += A[i]  # count how many 1
            if A[i] == 1:
                one_pos += 1
                output_0 += (cnt_0 * (cnt_0 + 1)) // 2
                lkp.append([cnt_0])
                dict.append(i)   #ith 1 is at the location, used for lkp
                cnt_0 = 0
            else:
                cnt_0 += 1
                lkp.append(cnt_0)
        if cnt_0 != 0:
            output_0 += (cnt_0 * (cnt_0 + 1)) // 2
        cnt_0 = 0
        for i in range(len(A)-1, -1, -1):
            if A[i] == 1:
                lkp[i].append(cnt_0) #how many 0s behind it
                cnt_0 = 0
            else:
                cnt_0 += 1
        # print(lkp)
        # print(dict)
        if S == 0:
            return output_0
        elif S > sx:  # S > total 1 in the array
            return 0
        else:
            output = 0
            cnt_1 = 0
            for i in range(len(A)):
                if A[i] == 1:
                    cnt_1 +=1
                    if cnt_1 >=S:
                        diff = cnt_1-S
                        output += ( lkp[dict[diff]][0]+1)  * ( lkp[dict[cnt_1-1]][1] +1)

            return output

print(numSubarraysWithSum([0, 0, 0, 0, 0], 0))
print(numSubarraysWithSum(A = [1,0,1,0,1], S = 2))
print(numSubarraysWithSum(A = [1,0,0,1,0,0,1], S = 2))
print(numSubarraysWithSum(A = [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], S = 2))
#6814



# cnt = 1 if A[0] ==0 else 0
# s = A[0]
# dict = [1] #no matter the first number is 1 or 0, the lkp array starts with 1
# i = 1
# while i < len(A):
#     if A[i] == A[i-1] == 0:
#         cnt+=1
#         dict.append( (cnt**2 +cnt)//2)
#     elif A[i] ==1 and A[i-1]==0:
#         cnt = 0
#         dict.append()
#
#
#
